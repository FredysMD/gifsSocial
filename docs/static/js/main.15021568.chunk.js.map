{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifItem.js","components/GifGrid.js","hooks/useGifFetch.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useGifFetch","prototype","Prototype","string","isRequired","GifApp","ReactDOM","render","document","getElementById"],"mappings":"4MAqCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACI,sBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAnBQ,SAAEP,GAClBF,EAAeE,EAAEQ,OAAOF,a,+CCPnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIII,MAAOF,GAJX,cAIbG,EAJa,gBAMIA,EAASC,OANb,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCAPO,EAAU,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAG3B,OACI,qBAAKI,UAAY,YAAjB,SACK,sBAAKA,UAAY,4BAAjB,UACG,qBAAKA,UAAY,eAAeC,IAAQf,EAAMgB,IAAQN,IACtD,qBAAKI,UAAY,YAAjB,SACI,oBAAIA,UAAY,aAAhB,SAA+BJ,YCF7CO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECJR,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OATAC,qBAAW,WACPxB,EAASC,GAAWwB,MAAM,SAAAC,GACtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDV0BK,CAAa1B,GAAjCa,EAFkB,EAEvBN,KAAaa,EAFU,EAEVA,QAErB,OACI,qCACE,6BAAMpB,IACJoB,GAAW,mBAAGJ,UAAY,oCAAf,wBACb,6BAEMH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIC,aAWnCQ,EAAQQ,UAAY,CAChB3B,SAAU4B,IAAUC,OAAOC,YAGhBX,QENAY,EAvBA,WAAO,IAAD,EAEmB7C,mBAAS,CAAC,KAF7B,mBAEVQ,EAFU,KAEET,EAFF,KAIjB,OACI,sBAAK+B,UAAY,YAAjB,UACI,2CACA,cAAC,EAAD,CAAa/B,cAAkBA,IAC/B,uBACA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,YCbpCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.15021568.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInput = ( e ) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n    \r\n    const handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 0 ){\r\n            setCategories( categories => [ inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n            \r\n        \r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInput }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=5xR374VaYvev2qxlYdaliO1GjLdzZMsJ`;\r\n\r\n    const response = await fetch( url );\r\n\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifItem = ({ url, title }) => {\r\n\r\n\r\n    return (\r\n        <div className = \"card-size\">\r\n             <div className = \"card animate__slideInDown\">\r\n                <img className = \"card-img-top\" src = { url } alt = { title } />\r\n                <div className = \"card-body\">\r\n                    <h5 className = \"card-title\">{ title }</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Prototype from 'prop-types';\r\n\r\nimport { useGifFetch } from '../hooks/useGifFetch';\r\n\r\nimport { GifItem } from './GifItem';\r\n\r\n\r\nconst GifGrid = ( { category }) => {\r\n\r\n    const { data:images, loading } = useGifFetch( category );\r\n\r\n    return (\r\n        <>\r\n          <h2>{ category }</h2>\r\n          { loading && <p className = \"animate__animated animate__fadeIn\">Loading...</p> }\r\n          <ol>\r\n            {\r\n                images.map( img => (\r\n                    <GifItem \r\n                        key = {img.id}\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }\r\n          </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.prototype = {\r\n    category: Prototype.string.isRequired\r\n}\r\n\r\nexport default GifGrid;\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport  { getGifs } from '../helpers/getGif';\r\n\r\n\r\nexport const useGifFetch = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })  \r\n        })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return  (\r\n        <div className = \"container\">\r\n            <h2>GifSocial</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key = { category }\r\n                            category = { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifApp from './GifApp';\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}